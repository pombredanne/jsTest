线上微薄:
     http://218.241.195.44:8080/g/login        
    http://114.80.141.131:8080/account/login            sxdzwz_admin@163.com   sxdzwz    abeen_8298@msn.com  1qaz1qaz

通用客户端 gcp:
    http://192.168.1.85:8888/login

mcm 王会:
    https://172.16.9.1:8089/

报警系统:
    http://172.16.8.1:8880/login

webim:
    http://172.16.8.1:9998/static/js/demo/new1.html

















--------------------------------------------------       vim 知识    --------------------------------------------------

  shift+: 显示出命令标号
  shift+g  最后一行
  shift+0  第一行



kill -9 `ps aux | grep exe | awk '{print $2}'`      //杀死qq程序

http://192.168.1.85:8081/chat.app?invoke=offline&sid=b88451b1caf268c5ce47151a10eb938c&sn=1  im下线

sudo nohup mongod &

火狐 SSH Server  安装
    Username:Usernamezxj2007happy
    Password:Passwordzxj123

    ssh -qTfnN -D 7070 zxj2007happy@216.194.70.6

    58.64.197.216 bjvpn_user bjvpn123


 redis-cli flushall 清理缓存
 
 sed -i s/source/target/g filename

 find . -name "*.js" -exec sed -i s/source/target/g {} \;
 
1.创建文件夹
    mkdir -p 文件夹名
    p 确保目录名称存在，不存在的就建一个。

2.改文件/夹名 (也可用在剪切)
    mv 修改前文件夹名    修改后文件夹名

3:复制文件
    cp ［选项］ 源文件或目录 目标文件或目录

4:vim 查找/替换
    查找:
        :/word
        gd   --全文查找当前单词
    替换:
        :% s/well/good/      后面可以接正则算法  全部替换
        :% s/well /good/    中间空开 则是单次替换 
    技巧:
        http://a280606790.iteye.com/blog/770314
        去掉所有的行尾空格：   %s/\s\+$//
        去掉^M字符 :           :%s/^M$//g

    大小写转换:
        gu或者gU
        gg gu G  整篇文章
        可以配合 $ ^ G w 来做到 光标开头 结尾 尾部 单词转换

5:清空文件夹
    rm -rf /*

6:linux 递归删除 find 学习
    find  .  -name  '*.exe'  -type  f  -print  -exec  rm  -rf  {} \;
    (1) "."    表示从当前目录开始递归查找

    (2) “ -name '*.exe' "根据名称来查找，要查找所有以.exe结尾的文件夹或者文件

    (3) " -type f "查找的类型为文件

    (4) "-print" 输出查找的文件目录名

    (5) 最主要的是是-exec了，-exec选项后边跟着一个所要执行的命令，表示将find出来的文件或目录执行该命令。

         exec选项后面跟随着所要执行的命令或脚本，然后是一对儿{}，一个空格和一个\，最后是一个分号

7:VIM中空格和TAB的替换
    TAB替换为空格：
        1:retab
        2:
            :set expandtab
            :%ret! 4
            如果没有给定4，则用当前的tab宽度设定替换为space。
    空格转换TAB:
        :set ts=4
        :set noexpandtab
        :%retab!

8:文件编码
    :set fenc=编码    --用于编辑/保存更改
    :set enc=编码     -- 仅仅用于查看

9:打开内置的文件管理器
    :edit .  -- 后面可以跟路径

10: Tab 缩进
    1: ==  -- 每行只能tab一次  前面沒有tab 王后 有則往前tab
    2: =n  -- 當前行 豎着往下數n行 注意是跟他格式一樣的 一起進行tab操作
    3:n >> -- 默認n=1 豎着往下數n行 一起向右進行tab操作
    4:n << -- 默認n=1 豎着往下數n行 一起向左邊進行tab操作
    5:Ctrl+v+j/k  --形式如subl中的同时选中多行中的某一竖

11:返回前进
    编辑过程中 返回和前进 首先进入命令模式
    u  --- back     vim下命令模式 按Ctrl + z 会返回到终端模式 fg回到vim里
    Ctrl+r   -- forward

12: vim diff
    vim -d filea  fileb
    dp: 参照体为a
    do: 参照体为b

history
    history | grep cd
    history -c   --删除
    history -w   --更新
    !342         --执行342 动作

:e  重新加载  後面如果跟一個文件 則是打開某文件

vim 帮助操作:
 Ctrl+]  进入某项
 Ctrl+o  返回  也可用于vim中按G回到页尾的时候,返回刚才的地方
