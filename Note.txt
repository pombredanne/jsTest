
----------回收
    回收:
        主要代码:  destroy-----ui.js
         if (CollectGarbage) CollectGarbage(); ie回收
         总结:
             null和undefined的区别:
                http://www.cnblogs.com/xiaohui108/archive/2011/08/31/2160488.html  仅限了解 深入的话就有点钻牛角尖啦

----------可编辑div操作
    http://hi.baidu.com/louve01/item/efb14e1add258f6b3f87cedb  -------------DIV(contenteditable="true")鼠标光标处插入图片
    http://hi.baidu.com/tjy9999/item/bdbd56e1051ce9adcf2d4f1f  --------------input textarea光标读写操作
    http://www.jb51.net/article/31795.htm                      --------------兼容包括div
    http://hi.baidu.com/alimyself/item/0ce9d8f76e441dbe30c19939  ---------selection() range方法讲解
    当有焦点的时候,里面默认的<br>就取消了  没有焦点的时候 里面会自带一个<br>

----------this.src $(this).src
        this.src:获取Dom处理后的结构 比如:files://rambo/work/rambo.jpg
        this.getAttribute('src')===$(this).attr('src'): 获取属性上真是的结构   eg: ../work/rambo.jpg

----------<img>浏览器中表现差异
    <img alt="fdfsd" src="faceimg/2.gif">   在火狐上如果这张图片不存在 那么就是空白 并不出现其他浏览器的那种默认找不到图片

---------小知识点
    //关闭浏览器的时候 区分是刷新还是关闭     http://www.cnblogs.com/zgqys1980/archive/2008/09/02/1281843.html
    window.onbeforeunload=function(e){
            return '确定离开?'
    }

    $(document).keydown(function(e){
       if(e.keyCode===116||(e.keyCode===116&&e.ctrlKey)){    //116=F5键 ctrl+f5
           window.onbeforeunload=function(){};
        }
    })

    //禁用F5刷新键  ie678不管用
    if(e.keyCode===116){
      e.preventDefault();
    }

    onbeforeunload触发条件
        http://www.cnblogs.com/meteoric_cry/archive/2012/08/21/2649104.html
         防止空a链接影响,并且不影响自定义事件(click)解决办法:
             1:
            $(document).on('click','a',function(){
                window.onbeforeunload=function(){};
                setTimeout(function(){
                    ieClose();
                },1000)
            });
            2:
            <a href="javascript:;" onclick='return false'>test</a>
              >ie9||正常浏览器 可以给a动态添加 onclick
                   $('a').attr('onclick','return false')
            3:
            <a href='###'>test</a>
            4:
            $(document).on('click','a',function(event){
                var target=this.target,
                     href=this.href,
                     locHref=location.href,
                     rub=/javascript|_self/i;

                if (locHref.length-1===locHref.search('#')) {
                    locHref=locHref.slice(0,locHref.length-1);      //防止自动+一个'#'  刷新就无效了
                };
                //var bool=(target&&rub.test(target))||rub.test(href)||href===locHref+'#';
                var bool=(target&&!rub.test(target))||rub.test(href);
                if(bool){
                     event.preventDefault();
                }
            });
            5:
            <a>发动机就</a>
            <style>
                a{
                    cursor:pointer;/*去掉href 利用样式来模拟 >ie6可以*/
                }
            </style>

------------jquery toggle bug
    问题:
        checkbox不能使用toggle
        toggle方法在1.8.3以后版本中 都不再支持 以后版本慎用
     解决办法:
          1:使用click 推荐
          2:使用自定义toggle
     code:
        问题代码:
            <html>
            <head>
                <meta http-equiv="content-type" content="text/html; charset=utf-8">
                <title>Test</title>
                <script src="http://code.jquery.com/jquery-1.8.3.min.js"></script>
            </head>
            <body>
                <input type="checkbox" id="aaa">
                <input type="text" id="bbb" style="display:none;"/>
            </body>
                <script type="text/javascript" charset="utf-8">
                    $("#aaa").toggle(function() {
                        $("#bbb").toggle();
                        $(this).attr('checked', true);
                    }, function() {
                        $("#bbb").toggle();
                        $(this).attr('checked', false);
                   });
                </script>
            </html>
         第2解决代码:
               使用demos/jQ-toggle.html 里的方法

------------IE BUG
    一:
        $('<div class="gouriie">') //不能用  必须闭合标签 才能使用
    三:
        可编辑div无法自动添加br标签
        解决办法:
            if($.browser.msie&&e.keyCode ===13){     //TODO 兼容ie8 暂未测试ie9
                var sel=document.selection.createRange();
                sel.pasteHTML('<br>');
                sel.collapse(false);
                sel=null;
                return false;//这里不能去掉 必须
             }
     四:
        ie8下  聊天窗口丢失焦点事件
         解决办法:
            有时候html('')或者empty()这两个都不行的话,考虑html(' '); 具体为什么?还在探索中

----------jquery获取元素小细节
    if (id==='keer3@163.com'){     //一个email
        $('#'+id);//错误 为空
        document.getElementById(id);//yes  可以的
        $(document.getElementById(id));
    }

----------jquery hide意外
    $('div.box').hide(e);   //意外的惊喜 哈哈 效果为 slide上下缓慢卷动

-----------判断ie
    --http://blog.csdn.net/satans18/article/details/5502129
    var isIE=!!window.ActiveXObject,
        isIE6=isIE&&!window.XMLHttpRequest,
        isIE8=isIE&&!!document.documentMode,
        isIE7=isIE&&!isIE6&&!isIE8;

    var var ie = 0
    var ie = !+'\v1';
    var ie = !-[1,];
    var IE = eval('"v"=="\v"');
    var ie6=!-[1,]&&!window.XMLHttpRequest;

    [注意----注意]  !-[-1,]  !+[1,]    !+"v1"   这些无法判断ie9,10 因此如果需要判断9,10不要使用它们

-----------js判断当前窗口是否被激活(获取焦点)
    http://blog.sina.com.cn/s/blog_4d38a3b001019zd6.html
     $(document).one('mouseenter',function(){ // $(window)  在ie中不管用
             stop();
     })

-----------原生js  链式写法缺陷
    一:,
     var tempEle = document.createElement("div");
     tempEle.innerHTML = str;   //yes
     var tempEle = document.createElement("div").innerHTML = str;   //no
    二:
      <script type="text/javascript">
        function sub(){
               document.getElementById("textarea").innerHTML=editor.html();  //如果不写清楚 <script type="text/javascript">  则将会在IE中报无权限错误
        }
    </script>

-----------mouseout mouseover mouseenter mouseleave
        mouseout mouseenter:
            1:表现形式都一样, 绑定的事件都是只执行一次
            2:不同点就在于 mouseenter 不会发生冒泡.  案例:http://www.css88.com/archives/2297 http://www.w3cschool.cn/t5420.html?f=jquery_event_mouseenter_mouseover
                解决:
                检查节点并加以判断: http://xiebiji.com/2010/02/js_mouseenter_mouseleave/
                道理同上 只不过是在事件中加以判断: http://www.qiqiboy.com/2011/01/19/javascript-mouseover-and-mouseout.html
                ps:判断节点关系 可以参考 Dom.js中的 contains函数

-----------setTimout setInterval
    必须养成习惯
        setTimeout(function(){fn},time) //使用function
        setTimeout(fn,time);    //坚决抵制 不能这样用

        ------  setTimeOut()  设置参数
        one:

            this.waitAndShout = function() {
            window.Obj = this;
            setTimeout('Obj.shout()', 5000);
            }
            这样就可以了。实际上
            setTimeout('Obj.shout()', 5000);
            等价于

            window.setTimeout('window.Obj.shout()', 5000);
                    --http://blog.csdn.net/free_wind22/article/details/2224363

        two:
            function st(arg){
                   return function(){alert(arg);}
             }
            var st1 = st(true);
            setTimeout(st1, 2000);
                    --http://hi.baidu.com/robinkang/item/4755ee0ad24943e2fe240d0c
        three:  //  使用于 FF&&ie=>ie9不管用 建议看看知道这个回事就行
            window.setTimeout(foo,100,'fdfd',"baz");//setInterval  也可以
            function foo(){
                console.log(arguments.length);
                for (var arg = 0;arguments[arg];arg++){
                    console.log(arg+": "+arguments[arg]);
                }
            }

-----------console----------isNaN--- 转换小问题
    isNaN("4") //false   isNaN("ddd") //true
    "3">"24" //true    ==> "3">"2"
    '5'>'0671' ==>  如果是非num类型的数据 比较大小的时候 往往是比较首数字的大小

-----------判断中文
    //判断中文
    function ischinese(s){
        var ret=true;
        for(var i=0;i<s.length;i++){
            ret=ret && (s.charCodeAt(i)>=10000);
        }
        return ret;
    }
    //中文[字符长度]  在js中使用length检测的时候 汉字也会被认为是1个字符
    //但是在后台 服务器 数据库中汉字应该为2个.
    //因此如果文档中有明确说明字符长度 那么使用此方法 是最标准的
    String.prototype.len=function(){
        return this.replace(/[^\x00-\xff]/g,"rr").length;
    };

-----------Url编码
    URL编码
        结论1:网址路径的编码，用的是utf-8编码
        结论2:查询字符串的编码，用的是操作系统的默认编码 linux:utf-8 windows:gb2312
        结论3:就是，GET和POST方法的编码，用的是网页的编码<meta http-equiv="Content-Type" content="text/html;charset=xxxx">
        结论4:在Ajax调用中，IE总是采用GB2312编码（操作系统的默认编码），而Firefox总是采用utf-8编码。

-----------IE高级安全测略
    在ie中的input file中,必须是鼠标点击才管用,否则会报无权限

-----------文档模式
    网页必须包含恰当的<!DOCTYPE>指令。
    文档模式:
        1:它代表的是浏览器以何种模式呈现页面。
        2:不同的文本模式对应不同的排版引擎，不同的JS引擎。
        3:影响ie的 document.documentMode
        使用:
            <meta http-equiv="X-UA-Compatible" content="IE=7" >            <!-- (1) 使用ie7兼容模式渲染-->
            <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />  <!--(2)  模仿ie7  >ie8 才会有 对于>ie8的浏览器 (1) (2) 都可以使用效果一样 -->
             <!--
                两者区别:
                    1: (1)不管页面是否使用<!DOCTYPE>指令，都像是使用了 Windows Internet Explorer 7的标准模式。
                    (2)content="IE=EmulateIE7"模式遵循<!DOCTYPE>指令。对于多数网站来说，它是首选的兼容性模式。
                    -- 总结自:http://nicyea.iteye.com/blog/719007
                  -- http://yiminghe.iteye.com/blog/802021
             -->
    浏览器模式:
        1:它代表的是用户以何种浏览器访问网站。
        2:用于切换IE针对该网页的默认文本模式、对不同版本浏览器的条件注释解析、决定请求头里userAgent的值
        3:它在浏览器发出请求之前就已经确定，网站没有办法修改这个值.

        使用:
            <!–[if IE 7]>
                <style type=”text/css”>
                    .content{color:#F00;}
                </style>
            <![endif]–>

    特殊:
        1:
        <meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″ />
        IE=edge  使用你系统中最高版本的ie
        chrome   如果你ie中安装chrome内嵌框架,那么将会使用chrome引擎来渲染页面
            网络:http://choizhang.com/wordpress/x-ua-compatible.html
        2:
        360双核浏览器 模式切换
            <meta name="renderer" content="webkit|ie-comp|ie-stand"> 极速模式|兼容模式|IE模式
    额外:
        document.compatMode:ie特有的检测ie对盒子模型的支持   --http://www.cnblogs.com/Optimal/archive/2013/04/28/3049500.html
-----------resizeTo
    该函数中 open尺寸的差别:http://www.okimg.com/0001!2313.html

    更多widnow对象的函数:  http://www.dreamdu.com/javascript/window.resizeTo/

----------- A标签模拟点击
    if(navigator.userAgent.search('Chrome')>-1){    //谷歌中 没有给他click属性
            var sub=$('#t1')[0];
            var e = document.createEvent('MouseEvent');
            e.initEvent('click', false, false);
            sub.dispatchEvent(e);
    }else{
        $('#t1')[0].click();//火狐ie可以
    }

-----------  jquery jsonp跨域请求
    jsonp  jsonpCallback的区别:
        jsonp:传输地址上的参数名  默认  ?callback=jsonCallbacl
        jsonpCallback:跨域后返回的成功函数名称  表现即为: ?callback=jsonCallbacl   默认:jsonpcallback
        http://www.jb51.net/article/28502.htm   --摘自

     跨欲服务器上的设置:
        http://www.cnblogs.com/cfanseal/archive/2009/05/19/1460382.html          --简单讲解

----------- 添加 focus
    给一个input添加一个focus 他的默认操作为:  移动滚动条 找到input 添加focus

----------- Javascript跨浏览器处理键盘事件keydown,keypress,keyup
    http://www.cnblogs.com/leolai/archive/2012/08/01/2618386.html
    http://daidaidaiksw-163-com.iteye.com/blog/1128834

-----------  jquery data()
    $.data()  $(element).data()
     1.8以后:
        $._data(DOM,'events')
     1.8以前:
        $.data(DOM,'events')   $(DOM).data('events')

----------- trim方法
    网上说处理大数据使用此方法:  http://www.cnblogs.com/rubylouvre/archive/2009/09/18/1568794.html

-----------  releaseCapture setCapture 的作用 优势  [未搞明白 回头再来]
     if (self.setCapture) {
        self.setCapture();
     } else if (window.captureEvents) {
        window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
     }

     if ($(Domid)[0].releaseCapture) {
        $(Domid)[0].releaseCapture();
     } else if (window.captureEvents) {
        window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
     }

     比较纳闷的是:
        我完全可以用document.mouseover   document.unbind('mouseover')来代替 但是加上这个有什麽好处呢?

-----------  不会因为uri改变而被干掉的 window.name
    if(!window.name){   //此方法仅适用于window.name属性  因此可以用在跨域处理上 兼容all 浏览器
          alert("第一次开这个窗口！name值"+ window.name);
          window.name = 'lijia';
    }else{
            alert('刷新操作 name值：'+ window.name);
    }

-----------  iframe沙箱应用
  //http://www.cnblogs.com/rubylouvre/archive/2012/02/03/2335946.html
  window.alert = function(){};
  window.alert=function(obj){
      var iframe=document.createElement("iframe");
      iframe.src="javascript:void(0);"
      document.body.appendChild(iframe)
      iframe.contentWindow.alert(obj);
  }
  alert(1)

  -----------alert
   火狐中:
   1:
     alert(); //FF: ''   other:undefined
   2:
     window.onunload=function(){
        alert(23);   //TODO  ff chrome 不能弹出alert    在卸载期间封锁。
     }

-----------   火狐中 _moz resizing
    火狐中textarea可以自由拖动:http://www.w3schools.com/css3/css3_user_interface.asp
    编译器中:http://www.frontendcodes.com/?p=185
    在使用resize的时候, style="resize: none;height:50px;"   height:必须放到resize前面
    style="height:50px;" style="resize: none;"    两个style的时候  只认  第一个

-----------   javascript: 防止在新页面打开
    <a href="javascript:$('div.register_content').hide();void(0)">   ps:   <!-- fjdkfjlj  --!>   谷歌 火狐中 正确注释    但是  ie8以下  认为是一段注释的没有结束

----------- document.write
     document.write('<script type="text/javascript" src="//code.jquery.com/jquery-latest.js"><'+'\/script>')  //在//处自动添加添加http前缀

----------- 解析json字符串
   1:jQuery.parseJSON
   2:var obj = (new Function("return " + json))();
   3:var objTEST=eval("("+strTEST+")");
   4:var data = !(/[^,:{}\[\]0-9.\-+Eaeflnr-u\n\r\t]/.test(source.replace(/"(\\.|[^"\\])*"/g, '')))&& eval('(' + source+ ')');    // 安全的做法
       --http://stackoverflow.com/questions/921374/how-do-i-convert-a-json-string-to-a-javascript-object-in-jquery
         http://www.cnblogs.com/lishenglyx/archive/2009/04/02/1427727.html

----------   jquery 插件缺憾 以及 碎点知识补足
    1: jquery 无法给对象添加 私有属性
        eg: $('div').ppname='rambo'// 这样不会成功
        可以采用 data方法 进行弥补 或者直接给dom结构绑定 即 $('div')[0].ppname
    2: var k=$('div').xl(); k.remove();  这种形式可以使用以下两种:
        $.fn.xl = function () {
            function a(name){
                this.kl=name;
            }
            a.prototype=jQuery.prototype;  //如果还想继续链式调用jquery的方法
            加上这个
            a.prototype._name=function(){
                console.log(2)
            }
            return new a('fd')
        }
        var k=$('div').xl();
        console.log(k)  //function

        $.fn.xl=function(){
            $.fn.xl()._name=function(){
               if(contains($(this),self)){  // (1)
                   console.log(2);
               }
            }
        }

        两种方法的共同点
            如果第一种方法加上啦 a.prototype=jQuery.prototype
            那么两种方法都一样,
            将_name方法添加到啦jquery的原型中,任何对象都可以调用 使用他
            因此必须进行判断一下 或者建议使用第一种 去掉a.proty`````
            判断方法:  见(1)

---------    javascript Date对象的特殊点
    1:new Date('2013-03-4');   // 非chrome浏览器[sarfa opera未测试]无法正常换算成Date对象
       解决办法:
        function strToData(a){
            //return new Date(a.replace(/-/g,"/"));  //适用于
            return new Date(Date.parse(a.replace(/-/g,"/")));  //  效果同上 只为更严谨来
        }
    2:new Date(’2013-03-01′)不一定等于new Date(’2013/03/01′)        ----http://bbs.9ria.com/thread-175853-1-1.html

---------    css强制换行
        ----http://hi.baidu.com/gxsboy/item/4df51312867f130ce75c3629
        ----http://www.cnblogs.com/mofish/archive/2011/02/16/1956263.html
        强制不换行
            div{
                white-space:nowrap;
            }
        自动换行
            div{
                word-wrap: break-word;
                word-break: normal;
            }
        强制英文单词断行
            div{
                word-break:break-all;
            }

---------   随机排序数组
        var count = 3000;
        var original = [];
        for (var i = 0; i < count; i++) {
            original[i] = i + 1;
        }
        //1
        original.sort(function() {
            return 0.5 - Math.random();
        });

        //2
        for (var num, i = 0; i < count; i++) {
            do {
                num = Math.floor(Math.random() * count);
            } while (original[num] == null);
            // do something
            original[num] = null;
        }

        //3
        for (i=0;i<count;i++){
            var index=Math.floor(Math.random()*original.length); //随机取一个位置
            // do something
            original.splice(index,1);
        }

--------    console.log 的问题
        在ie10 以下的浏览器中  如果不打开f12 开发者工具  那么他们将会视为异常抛出 程序终止

--------   脚本错误：600该操作无效的目标元素
        在innerHTML=html;   html为table  tr这类数据格式的时候 直接使用  innerHTML ie9以下会出现 上述600错误
        解决办法:
            1:使用jquery的 $.fn.html
            2:判断tr标签    ---http://stackoverflow.com/questions/7180072/script-600-error-invalid-target-element-for-this-operation
                var a=document.getElementById("dealdata");
                while(a.firstChild!=null)
                  a.removeChild(a.firstChild);

                var b=document.getElementById("helper");
                b.innerHTML="<table>"+this.responseText+"</table>";
                while(b.tagName!="TR") {
                  if(b.tagName==null)
                    b=b.nextSibling;
                  else
                    b=b.firstChild;
                }
                for(;b!=null;b=b.nextSibling)
                  a.appendChild(b);

--------   dom 属性选取一个有趣
        在获取属性的val的时候, getAttribute('name')===getAttribute('Name') 不区分大小写

-------   循环中绑定事件
            var k=function(i){console.log(i)};
             for(var i=0;i<20;i++){
                     // 点击时候 出现 20,20,20,20.........20   20个20
                     $('#bBtn')[0].addEventListener('click',function(){k(i)},false);

                     // 正确执行 在click的时候 打印0,1,2,.......19 
                     (function(i){
                         $('#bBtn')[0].addEventListener('click',function(){k(i)},false);
                     })(i);
                     $('#bBtn')[0].addEventListener('click',new Function('k('+i+')'),false);

                     // 直接执行k(i)  并且是 19 19 19 .... 19
                     eval('console.log(i)')
                     $('#bBtn')[0].addEventListener('click',eval(function (){k(i)})(),false);

                     // 顺便说以下 new function    这简直就是一个错误 禁止使用 --http://www.jb51.net/article/13895.htm
             }

---------  判断来源网站
      window.document.referrer   --http://www.zhihu.com/question/21116446

--------   同步 异步原理
    http://www.cnblogs.com/ustbwuyi/archive/2007/02/08/645061.html   ----水管说

--------  jQuery  on 方法
        1:
            $(document).on('keyup', $input, function(event) {
                // this == document;  因为 $input  是一个 jquery的dom结构 而不是一个单纯的选择器   并且 该方法并没有在 $input上委托 而是直接给document绑定的事件
            });
        2:
            jquery on 不能直接绑定hover toggle事件

--------  link shortcut icon
    <link rel="icon" href="http://cdn.iplaysoft.com/ipc/favicon.ico" type="image/x-icon" />
    <link rel="shortcut icon" href="http://cdn.iplaysoft.com/ipc/favicon.ico" type="image/x-icon" />
    1: 相对路径不管用 尝试使用绝对路径
    2: 名称必须为 favicon.ico  位置最好放在 网站根目录下

-------   array push 
    Array.push   // return  Array.length
