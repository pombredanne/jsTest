----------思想

    Class方法----core.js
        对其最大的感触就是 不错的继承 以及this之间的转换 很好的达到了jQuery的$.proxy的效果  
        要求:彻底掌握这种思想
     
     大型项目命名规范
        第一次使用命名空间,虽然感觉上有那么点不是真正的命名空间(即直接使用对象定义的).真正见识到大型项目的'复杂',也真正意识到老师说的--"真正的锻炼,真正的思想成熟,真正的良好的代  码结构,在你经历过一个优良的大型项目的时候".
        要求:一定要掌握 大型项目的代码格式以及 整理思想
     
----------拖动层

    zIndex 界限的处理
        zIndex
            总结:最好将其设定一个全局变量或者封装在全局对象中
            疑问:什麽时候将全局zIndex归0?   ----初步答案 隔断时间判断页面上是否有弹出层?0:"";  (zIndex自我感觉没有必要归0操作)
         
         界限问题:
            总结:document.body.clientWidth  获取页面可视的高度---ＦＦ不兼容(document.documentElement.clientHeight)
                 获取ｄｉｖ的高度宽度Div.scrollHeight
          
    释放焦点:
        $(self).releaseCapture && $(self).releaseCapture(); //IE下释放焦点
    
    规范拖动层基本标准        
            总结:跟黄哥一起讨论 总结如下:
                1:要实现 拖动 内容div的分别实现(内容div不能拖动)
                2:界限
              3:zIndex
                4:拖动点的位置设置(拖动的时候鼠标位置 是指在鼠标位置 还是指在拖动右上角)
                
----------回收
    回收:
        主要代码:  destroy-----ui.js
         this[i] = undefined;//这种写法 不推荐 
         this[i] = null;// 推荐这种写法
         if (CollectGarbage) CollectGarbage(); ie回收
          总结:
          想了解一下:http://www.cnblogs.com/xiaohui108/archive/2011/08/31/2160488.html  仅限了解 深入的话就有点钻牛角尖啦
          
----------可编辑div操作
    http://hi.baidu.com/louve01/item/efb14e1add258f6b3f87cedb  -------------DIV(contenteditable="true")鼠标光标处插入图片
    http://hi.baidu.com/tjy9999/item/bdbd56e1051ce9adcf2d4f1f  --------------input textarea光标读写操作
    http://www.jb51.net/article/31795.htm                      --------------兼容包括div
    http://hi.baidu.com/alimyself/item/0ce9d8f76e441dbe30c19939  ---------selection() range方法讲解
    当有焦点的时候,里面默认的<br>就取消了  没有焦点的时候 里面会自带一个<br>
    目标:
        把编译器搞定就OK
        
----------this.src $(this).src
    获取图片src:
        this.src:获取Dom处理后的结构 比如:files://rambo/work/rambo.jpg
        this.getAttribute('src')===$(this).attr('src'): 获取属性上真是的结构   eg: ../work/rambo.jpg
 
----------滚动到底部
    document.getElementById('div1').scrollHeight
          
----------<img>浏览器中表现差异
    <img alt="fdfsd" src="faceimg/2.gif">   在火狐上如果这张图片不存在 那么就是空白 并不出现其他浏览器的那种默认找不到图片   

---------小知识点
    //关闭浏览器的时候 区分是刷新还是关闭     http://www.cnblogs.com/zgqys1980/archive/2008/09/02/1281843.html
    window.onbeforeunload=function(e){
            return '确定离开?'
    }
    $(document).keydown(function(e){
       if(e.keyCode===116||(e.keyCode===116&&e.ctrlKey)){    //116=F5键 ctrl+f5
           window.onbeforeunload=function(){};
        }
    })

    //禁用F5刷新键  ie678不管用  
    if(e.keyCode===116){
      e.preventDefault();
    }
    
    //检测鼠标是否在页面内
    $(document).bind('click',function(event){
        var height=$(window).height(),
             width=$(window).width(),
             mouseX=event.clientX,
             mouseY=event.clientY;
        if(!(0<mouseY&& mouseY<height && 0<mouseX&&mouseX< width)){ 
             console.log('你们是没有能力点到我的 我是在窗体外面的')
        }
    })
    
    //onbeforeunload触发条件
        http://www.cnblogs.com/meteoric_cry/archive/2012/08/21/2649104.html
         防止空a链接影响,并且不影响自定义事件(click)解决办法:
             1:
            $(document).on('click','a',function(){
                window.onbeforeunload=function(){};
                setTimeout(function(){
                    ieClose();
                },1000)
            });
            2:
            <a href="javascript:;" onclick='return false'>test</a>
              =>ie8||正常浏览器 可以给a动态添加 onclick
                   $('a').attr('onclick','return false') 
            3:
            <a href='###'>test</a>
            4:
            $(document).on('click','a',function(event){
                var target=this.target,
                     href=this.href,
                     locHref=location.href,
                     rub=/javascript|_self/i;

                if (locHref.length-1===locHref.search('#')) {
                    locHref=locHref.slice(0,locHref.length-1);      //防止自动+一个'#'  刷新就无效了
                };
                //var bool=(target&&rub.test(target))||rub.test(href)||href===locHref+'#';
                var bool=(target&&!rub.test(target))||rub.test(href);
                if(bool){ 
                     event.preventDefault();
                }
            });
            5:
            <a>发动机就</a>
            <style>
                a{
                    cursor:pointer;/*去掉href 利用样式来模拟  ie8 ie7可以*/
                }
            </style>

------------jquery toggle bug
    问题:
        checkbox不能使用toggle
        toggle方法在1.8.3以后版本中 都不再支持 以后版本慎用
     解决办法:
          1:使用click 推荐
          2:使用自定义toggle
     code:
        问题代码:
            <html>
            <head>
	            <meta http-equiv="content-type" content="text/html; charset=utf-8">
	            <title>Test</title>
	            <script src="http://code.jquery.com/jquery-1.8.3.min.js"></script>
            </head>
            <body>
	            <input type="checkbox" id="aaa">
	            <input type="text" id="bbb" style="display:none;"/>
            </body>
	            <script type="text/javascript" charset="utf-8">
                    $("#aaa").toggle(function() {
			            $("#bbb").toggle();
			            $(this).attr('checked', true);
		            }, function() {
			            $("#bbb").toggle();
			            $(this).attr('checked', false);
	               });
                </script>
            </html>
         第2解决代码:
                /*
                    使用:
                        toggle2(element, function(e) {
                            alert(e.type)
                            alert("这是回调函数一")
                        }, function(e) {
                            alert("切换到回调函数二")
                        });
                */
                var toggle2 = function(el) {
                        var fns = [].slice.call(arguments, 1),
                            backup = fns.concat(); //相当于备份克隆一下
                        addEvent(el, 'click', function(e) {
                            if(!fns.length) {
                                fns = backup.concat()
                            }
                            fns[0].call(this, e);
                            fns.shift();
                        });
                };
                function addEvent(element, type,handler){
                            if (element.addEventListener){
                                element.addEventListener(type, handler, false);
                            } else if (element.attachEvent){
                                element.attachEvent("on" + type, handler);
                            } else {
                                element["on" + type] = handler;
                            }
                }

------------数组最大数目
var t=Math.max.apply(Math,Array);  var nm=Math.max.call(this,2,3,4,8,1222,5,10);  //this Math一般都可以

------------IE BUG
    一:
        $('<div class="gouriie">') //不能用  必须闭合标签 才能使用
    二:
        class为关键字 不能使用class为变量名   eg:$('<div>').attr({class:'ui'}); 禁止使用这种方法
    三:
        可编辑div无法自动添加br标签
        解决办法:
            if($.browser.msie&&e.keyCode ===13){     //TODO 兼容ie8 暂未测试ie9
                var sel=document.selection.createRange();
                sel.pasteHTML('<br>');
                sel.collapse(false);
                sel=null;
                return false;//这里不能去掉 必须
             }
     四:
        ie8下  聊天窗口丢失焦点事件
         解决办法:
            有时候html('')或者empty()这两个都不行的话,考虑html(' '); 具体为什么?还在探索中
         附加bug:
            当修正后竟然 连问题三 也解决了 这是百思不得其解啊!!!!!
                
----------jquery append 原理
    A.append(B);   将B剪切到A中(clone也是如此)   如果在for循环中使用  不考虑这一点的话 很可能造成 闭包 导致 B只在最后一个A中有 别的都没有
    
----------jquery获取元素小细节 
    if (id==='keer3@163.com'){     //一个email
        $('#'+id);//错误 为空
        document.getElementById(id);//yes  可以的
        $(document.getElementById(id));
    }

----------jquery hide意外
    $('div.box').hide(e);   //意外的惊喜 哈哈 效果为 slide上下缓慢卷动

----------var 小细节
    var b={};
    var t='rambo',
        age=19,
        b=b||{},
        b.k=b.k||{};/*这一行 错误的  因为b是一个Object 不能这样对Object的子属性进行分配*/

-----------判断ie
    --http://blog.csdn.net/satans18/article/details/5502129
    var isIE=!!window.ActiveXObject,
        isIE6=isIE&&!window.XMLHttpRequest,
        isIE8=isIE&&!!document.documentMode,
        isIE7=isIE&&!isIE6&&!isIE8;
     
    然后是一个稍微短的js判断是否ie的方法：
    2010年1月一位俄国人利用了IE与标准浏览器在处理数组的toString方法的差异，仅仅6bytes就完美完成了是否IE浏览器的检测：
    var var ie = 0
    一个最短的js判断ie或非ie的代码，大小仅仅7bytes：
    var ie = !+'\v1';
    2010年1月，一位俄国人利用了IE与标准浏览器在处理数组的toString方法的差异，仅6bytes就完美完成了是否IE浏览器的检测：
    var ie = !-[1,];
    
    var IE = eval('"v"=="\v"');
    利用这些发现，我们可以使代码写的更短。如今检测是否为IE6其实可以写成：
    var ie6=!-[1,]&&!window.XMLHttpRequest;
    
    
    [注意----注意]  !-[-1,]  !+[1,]    !+"v1"   这些无法判断ie9,10 因此如果需要判断9,10不要使用它们

-----------js判断当前窗口是否被激活(获取焦点)
    http://blog.sina.com.cn/s/blog_4d38a3b001019zd6.html
     $(document).one('mouseenter',function(){ // $(window)  在ie中不管用
             stop(); 
     })

-----------原生js  链式写法缺陷
    一:
     var tempEle = document.createElement("div");
     tempEle.innerHTML = str;   //yes
     
      var tempEle = document.createElement("div").innerHTML = str;   //no
    二:
      <script type="text/javascript">
        function sub(){
                   document.getElementById("textarea").innerHTML=editor.html();  //如果不写清楚 <script type="text/javascript">  则将会在IE中报无权限错误
            }
    </script>
  
-----------mouseout mouseover mouseenter mouseleave
        mouseenter mouseleave -----禁止冒泡 这种冒泡有时候你使用return false 是难以阻止 不知道在那冒泡
        mouseover:从子元素中出来到(事件元素)父元素还会触发一次 不仅仅在子元素冒泡 父元素也会冒泡
         说明案例:http://blog.csdn.net/ocean1010/article/details/7394599

            网上看到的 解决冒泡 兼容方法

            /*
               mouseover mouseout      mouseenter mouseleave
               作用: mouseover mouseout 去掉冒泡 达到mouseenter mouseleave 效果
               使用: 
                  jquery:
                    $('#parentDiv').mouseover(function(){
                      if(fixedMouse(event, this)){//使用
                          logs.innerHTML+="MouseOver<br />";
                      }
                    });
                 js:
                    addListener(target,'mouseover',function(e){
                    e=e||window.event;
                    if(fixedMouse(e, target)){
                        //do something
                    }
                },false);
            */
            function fixedMouse(e, target) {
                var related, type = e.type.toLowerCase();
                if(type === 'mouseover') {
                  related = e.relatedTarget || e.fromElement;
                } else if(type === 'mouseout') {
                  related = e.relatedTarget || e.toElement;
                } else {
                  return true;
                }
                return related && related.prefix != 'xul' && !contains(target, related) && related !== target;

            }

            function contains(parent, child) { //检测child节点是否存在于parent节点中
                // FF:parent.contains(child)
                return parent.contains ? parent != child && parent.contains(child) : !! (parent.compareDocumentPosition(child) & 16);
            }


            //自我总结的方法  解决另一种[重复(这种重复还不知道是不是冒泡造成的,因此不敢下评论)]的办法 这种情况对mouseover mouseout      mouseenter mouseleave  都有用[mouseenter mouseleave 这两个有时候也会存在冒泡]
            <!DOCTYP>
            <html>
             <head>
                  <title> New Document </title>
                  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js"></script>
                  <script>!window.jQuery && document.write('<script src="jquery-1.4.3.min.js"><\/script>');</script>
             </head>
             <body>
                <div id='ffff' >fdfdsfds</div>
                <style type="text/css">
                    #ffff{
                        border:1px solid red;
                        width:100px;
                        height:100px;
                      }
                </style>
             </body>
            </html>
            <script type="text/javascript">
		            $('#ffff').bind('mouseenter mouseleave',function(event){//换成mouseover mouseout 也行
			            //alert("toElement:"+event.toElement.innerHTML)
			            if(document.all){event.toElement.innerHTML;event.fromElement.innerHTML;}  //1 竖直方向 2 左右方向
			
			              //这就是解决重复的地方
			            alert(4)
		            })
              </script>

-----------setTimout setInterval
    必须养成习惯
        setTimeout(function(){fn},time) //使用function
        setTimeout(fn,time);    //坚决抵制 不能这样用
        
        ------  setTimeOut()  设置参数
        one:
	
	        this.waitAndShout = function() {
	        window.Obj = this;
	        setTimeout('Obj.shout()', 5000);
	        }
	        这样就可以了。实际上
	        setTimeout('Obj.shout()', 5000);
	        等价于

	        window.setTimeout('window.Obj.shout()', 5000);
			        --http://blog.csdn.net/free_wind22/article/details/2224363

        two:
	        function st(arg){
	               return function(){alert(arg);}
	         }
	        var st1 = st(true);
	        setTimeout(st1, 2000);
			        --http://hi.baidu.com/robinkang/item/4755ee0ad24943e2fe240d0c
        three:  //  使用于 FF&&ie=>ie9不管用 建议看看知道这个回事就行
     		window.setTimeout(foo,100,'fdfd',"baz");//setInterval  也可以
	        function foo(){
		        console.log(arguments.length);
		        for (var arg = 0;arguments[arg];arg++){
			        console.log(arg+": "+arguments[arg]);
		        }
	        }

-----------console----------isNaN--- 转换小问题
    isNaN("4") //false   isNaN("ddd") //true
    "3">"24" //true    ==> "3">"2"
    '5'>'0671' ==>  如果是非num类型的数据 比较大小的时候 往往是比较首数字的大小

-----------判断中文
    //判断中文
    function ischinese(s){ 
	    var ret=true; 
	    for(var i=0;i<s.length;i++){
		    ret=ret && (s.charCodeAt(i)>=10000); 
	    }
	    return ret; 
    }
    //中文字符长度
    String.prototype.len=function(){                 
        return this.replace(/[^\x00-\xff]/g,"rr").length;          
    };
     
-----------获取href中某一项
function getQueryString(name,url){
        var reg = new RegExp("(^|&|\\?)"+ name +"=([^&]*)(&|$)"), r;
        url=url||location.href;
        if (r=url.match(reg)){
            return unescape(r[2]);
        }
        return null;
}

-----------Url编码
    URL编码 
        结论1:网址路径的编码，用的是utf-8编码
        结论2:查询字符串的编码，用的是操作系统的默认编码 linux:utf-8 windows:gb2312
        结论3:就是，GET和POST方法的编码，用的是网页的编码<meta http-equiv="Content-Type" content="text/html;charset=xxxx">
        结论4:在Ajax调用中，IE总是采用GB2312编码（操作系统的默认编码），而Firefox总是采用utf-8编码。
        
-----------unbind onclick
unbind("click")   去不了元素自带的  onclick   <a href="" onclick="alert('eeee')">dfdfjksdfk</a>


-----------IE高级安全测略
    在ie中的input file中,必须是鼠标点击才管用,否则会报无权限
   
-----------文档模式
    网页必须包含恰当的<!DOCTYPE>指令。
    文档模式:
        1:它代表的是浏览器以何种模式呈现页面。
        2:不同的文本模式对应不同的排版引擎，不同的JS引擎。
        3:影响ie的 document.documentMode
        使用:        
            <meta http-equiv="X-UA-Compatible" content="IE=7" >            <!-- (1) 使用ie7兼容模式渲染-->
            <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />  <!--(2)  模仿ie7  >ie8 才会有 对于>ie8的浏览器 (1) (2) 都可以使用效果一样 -->
             <!--
                两者区别:
                    1: (1)不管页面是否使用<!DOCTYPE>指令，都像是使用了 Windows Internet Explorer 7的标准模式。
                    (2)content="IE=EmulateIE7"模式遵循<!DOCTYPE>指令。对于多数网站来说，它是首选的兼容性模式。
                    -- 总结自:http://nicyea.iteye.com/blog/719007
                  -- http://yiminghe.iteye.com/blog/802021
             -->
    浏览器模式:
        1:它代表的是用户以何种浏览器访问网站。
        2:用于切换IE针对该网页的默认文本模式、对不同版本浏览器的条件注释解析、决定请求头里userAgent的值
        3:它在浏览器发出请求之前就已经确定，网站没有办法修改这个值.
        
        使用:
            <!–[if IE 7]>
                <style type=”text/css”>
                    .content{color:#F00;}
                </style>
            <![endif]–>
    
    特殊:
        <meta http-equiv=”X-UA-Compatible” content=”IE=edge,chrome=1″ />
        IE=edge  使用你系统中最高版本的ie
        chrome   如果你ie中安装chrome内嵌框架,那么将会使用chrome引擎来渲染页面
            网络:http://choizhang.com/wordpress/x-ua-compatible.html
    额外:
        document.compatMode:ie特有的检测ie对盒子模型的支持   --http://www.cnblogs.com/Optimal/archive/2013/04/28/3049500.html
-----------resizeTo
    该函数中 open尺寸的差别:http://www.okimg.com/0001!2313.html
    
    更多widnow对象的函数:  http://www.dreamdu.com/javascript/window.resizeTo/
 
----------- A标签模拟点击
    if(navigator.userAgent.search('Chrome')>-1){    //谷歌中 没有给他click属性
            var sub=$('#t1')[0];
            var e = document.createEvent('MouseEvent');
            e.initEvent('click', false, false);
            sub.dispatchEvent(e);
    }else{
        $('#t1')[0].click();//火狐ie可以 
    }

-----------  div 跟着屏幕的滑动 而改变 
    <script language="JavaScript">
        function scall(){
            var layer1=document.getElementById("ShowBottom"),
	            documentElement=document.documentElement,
	            documentBody=document.body,
	            scrollTop=documentElement.scrollTop+documentBody.scrollTop,	//主要兼容谷歌  documentBody.scrollTop
	            scrollLeft=documentElement.scrollLeft+documentBody.scrollLeft;

            layer1.style.top=(scrollTop+(documentElement.clientHeight-layer1.offsetHeight)/4)+"px";
            layer1.style.left=(scrollLeft+(documentElement.clientWidth-layer1.offsetWidth)/2+59.5)+"px";
         }

        window.onscroll=window.onresize=window.onload=scall;
    </script>
    
-----------  jquery jsonp跨域请求  
    jsonp  jsonpCallback的区别:
        jsonp:传输地址上的参数名  默认  ?callback=jsonCallbacl
        jsonpCallback:跨域后返回的成功函数名称  表现即为: ?callback=jsonCallbacl   默认:jsonpcallback
        http://www.jb51.net/article/28502.htm   --摘自
        
     跨欲服务器上的设置:
     
        http://www.cnblogs.com/cfanseal/archive/2009/05/19/1460382.html          --简单讲解
        
----------- 添加 focus  
    给一个input添加一个focus 他的默认操作为:  移动滚动条 找到input 添加focus
    
----------- Javascript跨浏览器处理键盘事件keydown,keypress,keyup  
    http://www.cnblogs.com/leolai/archive/2012/08/01/2618386.html
    http://daidaidaiksw-163-com.iteye.com/blog/1128834
    
-----------  jquery data()  
    $.data()  $(element).data()
     1.8以后:
        $._data(DOM,'events')  
     1.8以前:
        $.data(DOM,'events')   $(DOM).data('events')
        
----------- trim方法  
    网上说处理大数据使用此方法:
        function trim(str){  
            str = str.replace(/^(\s|\u00A0)+/,'');  
            for(var i=str.length-1; i>=0; i--){  
                if(/\S/.test(str.charAt(i))){  
                    str = str.substring(0, i+1);  
                    break;  
                }  
            }  
            return str;  
        }  
    暂未测试  还使用正则trim
    
-----------  文本中的url转换为http 
    http://www.zhihu.com/question/20339078
 
-----------  releaseCapture setCapture 的作用 优势  [未搞明白 回头再来] 
     if (self.setCapture) {
     	self.setCapture();
     } else if (window.captureEvents) {
     	window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
     }


     if ($(Domid)[0].releaseCapture) {
     	$(Domid)[0].releaseCapture();
     } else if (window.captureEvents) {
     	window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
     }
     
     比较纳闷的是:
        我完全可以用document.mouseover   document.unbind('mouseover')来代替 但是加上这个有什麽好处呢?
        
-----------  不会被刷新干掉的 window对象  
    //TODO  此方法仅使用于window自有属性
    if(!window.name){
          alert("第一次开这个窗口！name值"+ window.name);
          window.name = 'lijia';
    }else{
            alert('刷新操作 name值：'+ window.name);
    }

-----------  iframe沙箱应用      
  //http://www.cnblogs.com/rubylouvre/archive/2012/02/03/2335946.html
  window.alert = function(){};
  window.alert=function(obj){
      var iframe=document.createElement("iframe");
      iframe.src="javascript:void(0);"
      document.body.appendChild(iframe)
      iframe.contentWindow.alert(obj);
  }
  alert(1)
  
  -----------alert 
   火狐中:
   1:
     alert(); //空的alert  火狐中会报错
   2:
     window.onunload=function(){
		alert(23);   //TODO  ff chrome 不能弹出alert    在卸载期间封锁。
	 }   
	
-----------   火狐中 _moz resizing 
    img.setAttribute('contenteditable','false');
    document.designMode = "on";
    document.execCommand('enableObjectResizing', false, 'false');
    
-----------  字符转换
    function report(){
        var str=document.getElementById("hidden").innerHTML;
        str=str.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;nbsp;/g," ");
        document.getElementById("content_re").innerHTML=str
    }
    
-----------   javascript: 防止在新页面打开 
<a href="javascript:$('div.register_content').hide();void(0)">  
ps:   <!-- fjdkfjlj  --!>   谷歌 火狐中 正确注释    但是  ie8以下  认为是一段注释的没有结束

----------- resize: none
        在使用resize的时候, style="height:50px;resize: none;"   height:必须放到resize前面
        style="height:50px;" style="resize: none;"    两个style的时候  只认  第一个
        
----------- document.write         
 document.write('<script type="text/javascript" src="//code.jquery.com/jquery-latest.js"><'+'\/script>')  //在//处自动添加添加前缀

 -----------   each  
    var _li,
         onclick='fn';   //1 使用字符串拼接 onclic
    for(var i = 0,length=result.length;i<length;i++){
        _li+='<li class="province" val="'+result[i].val+'">'+result[i].name+'</li>';
    }
    $(self).append('<li class="province" val="">全部</li>',$(_li).each(function(){  //2 each连接 使用  , 
        $(this).click(function(){
            $("#div_government_fri").children().hide();
        });
   }));

----------- 解析json字符串
   1:jQuery.parseJSON
   2:var obj = (new Function("return " + json))();
   3:var objTEST=eval("("+strTEST+")");   
   4:var data = !(/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(source.replace(/"(\\.|[^"\\])*"/g, '')))&& eval('(' + source + ')');
       --http://stackoverflow.com/questions/921374/how-do-i-convert-a-json-string-to-a-javascript-object-in-jquery
         http://www.cnblogs.com/lishenglyx/archive/2009/04/02/1427727.html

-----------  addEventListener 注意事项:
    1: 判断
        if(window.addEventListener){
            
        }else if(window.attachEvent){
            // 这里有必要进行判断一下
        }
    2: 阻止默认事件
        ps: onselectstart  -- http://www.58lou.com/separticle.php?artid=181
        
        <div id="ftmp" onselectstart="return false">flondon</div>    // ok
        <div id="tmp">flondon</div>  
        <script>
          //ok 无兼容性
         document.getElementById("tmp").onselectstart =function(){
            return false;
         };  

        if(document.addEventListener){  
            document.getElementById("tmp").addEventListener("selectstart",
            function(evt){
                // TODO 阻止默认事件 return false 没作用
                evt.preventDefault(); 
                return false;
            }, true);  
        }else if(window.attachEvent){  
            document.getElementById("tmp").attachEvent("onselectstart",
            function(){
            // ie下 只需要return false 即可
            //window.event.returnValue= false
            return false;});  
         }  
        </script>

----------   jquery 插件缺憾 以及 碎点知识补足
    1: jquery 无法给对象添加 私有属性 
        eg: $('div').ppname='rambo'// 这样不会成功
        可以采用 data方法 进行弥补 或者直接给dom结构绑定 即 $('div')[0].ppname
    2: var k=$('div').xl(); k.remove();  这种形式可以使用以下两种:
        $.fn.xl = function () {
            function a(name){
                this.kl=name;
            }
            a.prototype=jQuery.prototype;  //如果还想继续链式调用jquery的方法
            加上这个
            a.prototype._name=function(){
                console.log(2)
            }
            return new a('fd')
        }
        var k=$('div').xl();
        console.log(k)  //function
        
        $.fn.xl=function(){
            $.fn.xl()._name=function(){
               if(contains($(this),self)){  // (1)
                   console.log(2);    
               }
            }   
        }

        两种方法的共同点 
            如果第一种方法加上啦 a.prototype=jQuery.prototype
            那么两种方法都一样,
            将_name方法添加到啦jquery的原型中,任何对象都可以调用 使用他
            因此必须进行判断一下 或者建议使用第一种 去掉a.proty`````
            判断方法:  见(1)
                
---------    javascript Date对象的特殊点
    1:new Date('2013-03-4');   // 非ie(ie11暂未测试)浏览器无法正常换算成Date对象
       解决办法:function strToData(a){return new Date(a.replace(/-/g,"/"))}
    2:new Date(’2013-03-01′)不一定等于new Date(’2013/03/01′)        ----http://bbs.9ria.com/thread-175853-1-1.html
